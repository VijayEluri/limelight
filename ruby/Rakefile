load File.expand_path(File.dirname(__FILE__) + "/../etc/tasks/_common.rake")

#require File.expand_path(File.dirname(__FILE__) + "/lib/limelight.jar")
#require File.expand_path(File.dirname(__FILE__) + "/lib/limelight-rb.jar")
#require File.expand_path(File.dirname(__FILE__) + "/lib/limelight/limelight_init")

RUBY_ROOT = File.expand_path(File.dirname(__FILE__))

def classpath
  elems = Dir.glob("#{RUBY_ROOT}/lib/**/*.jar")
  elems.concat Dir.glob("#{LIMELIGHT_ROOT}/lib/**/*.jar")
  elems.unshift "#{RUBY_ROOT}/classes"
  elems.join(path_separator)
end

def prod_deps
  %W(http://jruby.org.s3.amazonaws.com/downloads/1.6.4/jruby-complete-1.6.4.jar file:/#{LIMELIGHT_ROOT}/limelight.jar)
end

desc "Creates required files"
task "init" do
  in_dir(RUBY_ROOT) do
    FileUtils.mkdir("classes") if !File.exists?("classes")
    FileUtils.mkdir("lib/dev") if !File.exists?("lib/dev")
  end
end

desc "Install dependencies"
task "deps" => %{init} do
  FileUtils.rm "lib/limelight.jar" if File.exists?("lib/limelight.jar")
  deps(RUBY_ROOT, prod_deps, [])
  run_command("bundle install")
end

desc "Prints the calculated classpath"
task "classpath" do
  puts classpath
end

desc "Cleans classes and generated build files"
task "clean" do
  in_dir(RUBY_ROOT) do
    FileUtils.rm_rf "classes"
  end
end

desc "Compile the java source code"
task "compile" => %w{init} do
  javac(RUBY_ROOT, "src/**/*.java", classpath)
end

desc "Run ruby specs"
task "spec" do
  raise "ERROR!!! GEM_PATH not defined" unless ENV["GEM_PATH"]
  run_command "java #{jvm_opts} -cp #{classpath} org.jruby.Main -S rspec spec"
end
task "test" => %w{spec}

desc "Build a jar file with the limelight src"
task "jar" => %w{clean compile} do
  in_dir("classes") do
    with_tmp_file("../.manifest", ["Built-By: Micah Martin", ""]) do
      run_command "jar -cfm #{RUBY_ROOT}/lib/limelight-rb.jar ../.manifest *"
    end
  end
end

desc "Compiles, and tests the limelight java code"
task "build" => %w{clean deps jar spec}

desc "Builds a gem file"
task "gem" do #=> %w{jar} do
  begin
    version = limelight_version
    FileUtils.mkdir("gem")
    require "erb"
    template = ERB.new(IO.read("gemfile_template.rb"))
    File.open("gem/limelight.gemspec", "w") { |f| f.write template.result(binding) }
    FileUtils.mkdir("gem/ruby")
    FileUtils.cp_r("lib", "gem/ruby")
    FileUtils.cp_r("bin", "gem")
    FileUtils.cp("../limelight.jar", "gem/ruby/lib/limelight.jar")
    FileUtils.cp("../LICENSE", "gem/LICENSE")
    FileUtils.mkdir("gem/productions")
    FileUtils.cp("../productions/playbills.lll", "gem/productions")
    system `rm gem/ruby/lib/jruby-complete*`
    system "cd gem && gem build limelight.gemspec && cp limelight-#{version}-java.gem .."
  ensure
    FileUtils.rm_r("gem")
  end
end